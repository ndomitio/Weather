
@{
    /**/

    ViewBag.Title = "Weather Or Not";
}
<body>
    <h2>WeatherJS</h2>
    <div class="col-md-12">

        <h1>Current Conditions In <span data-bind="text:name"></span></h1>
    </div>
    <div class="col-md-12" style="margin-bottom:20px;">

        Temp<span data-bind="text:main.temp"></span>&deg; F

    </div>

    <button>Get Weather</button>

    <button>Get Forecast</button>



    <div id="googleMap1" style="width:400px;height:300px;"></div>
    <br>
    <div id="googleMap2" style="width:400px;height:300px;"></div>
    <br>
    <div id="googleMap3" style="width:400px;height:300px;"></div>
    <br>
    <div id="googleMap4" style="width:400px;height:300px;"></div>
    <br>
    <div id="mapmarker" style="width:400px;height:300px;"></div>
    <br />
    <div id="mapPinned" style="width:100%;height:500px;"></div>
    <br />
    <div id="map" style="height:300px;width:400px;"></div>
    <br>
    <div id="pano" style="height:300px;width:400px;"></div>

</body>
<script>


    function myMap() {
        var mapOptions1 = {
            center: new google.maps.LatLng(51.508742, -0.120850),
            zoom: 9,
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };
        var mapOptions2 = {
            center: new google.maps.LatLng(51.508742, -0.120850),
            zoom: 9,
            mapTypeId: google.maps.MapTypeId.SATELLITE
        };
        var mapOptions3 = {
            center: new google.maps.LatLng(51.508742, -0.120850),
            zoom: 9,
            mapTypeId: google.maps.MapTypeId.HYBRID
        };
        var mapOptions4 = {
            center: new google.maps.LatLng(51.508742, -0.120850),
            zoom: 9,
            mapTypeId: google.maps.MapTypeId.TERRAIN
        };
        var map1 = new google.maps.Map(document.getElementById("googleMap1"), mapOptions1);
        var map2 = new google.maps.Map(document.getElementById("googleMap2"), mapOptions2);
        var map3 = new google.maps.Map(document.getElementById("googleMap3"), mapOptions3);
        var map4 = new google.maps.Map(document.getElementById("googleMap4"), mapOptions4);
    }



    function initialize() {
        var fenway = { lat: 42.345573, lng: -71.098326 };
        var map = new google.maps.Map(document.getElementById('map'), {
            center: fenway,
            zoom: 14
        });
        var panorama = new google.maps.StreetViewPanorama(
            document.getElementById('pano'), {
                position: fenway,
                pov: {
                    heading: 34,
                    pitch: 10
                }
            });
        map.setStreetView(panorama);


        var map = new google.maps.Map(document.getElementById('mapmarker'), {
            zoom: 13,
            center: { lat: 59.325, lng: 18.070 }
        });

        marker = new google.maps.Marker({
            map: map,
            draggable: true,
            animation: google.maps.Animation.DROP,
            position: { lat: 59.327, lng: 18.067 }
        });
        marker.addListener('click', toggleBounce);
        google.maps.event.addListener(marker, 'click', function () {
            var infowindow = new google.maps.InfoWindow({
                content: "Wheres Waldo?!?!"
            });
            infowindow.open(map, marker);
        });

    }


    // The following example creates a marker in Stockholm, Sweden using a DROP
    // animation. Clicking on the marker will toggle the animation between a BOUNCE
    // animation and no animation.

    var marker;

    function toggleBounce() {
        if (marker.getAnimation() !== null) {
            marker.setAnimation(null);
        } else {
            marker.setAnimation(google.maps.Animation.BOUNCE);
        }
    }



    var weather = Object();
    $(document).ready(function () {
        $("button").click(function () {
            $.get("@Url.Action("GetWeather", "Home")", function (response) {
                //response parameter contains what is returned in the method you call in the quotes
                //response
                console.log(response);
                weather = ko.mapping.fromJS(response); //populate the weather object
                ko.applyBindings(weather);
            });
        });
    });

    @*var forecast = Object();
    $(document).ready(function () {
        $("button").click(function () {
            $.get("@Url.Action("GetForecast", "Home")", function (response2) {
                //response parameter contains what is returned in the method you call in the quotes
                //response
                //console.log(response);
                forecast = ko.mapping.fromJS(response2); //populate the weather object
                ko.applyBindings(forecast);
            });
        });
    });*@

</script>



<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB-_RBwlKGxsofVM-O3QeIIPiPDfVjcVO4
    &callback=myMap">
</script>

<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB-_RBwlKGxsofVM-O3QeIIPiPDfVjcVO4&callback=initMap">
</script>

<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB-_RBwlKGxsofVM-O3QeIIPiPDfVjcVO4&callback=initialize">
</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB-_RBwlKGxsofVM-O3QeIIPiPDfVjcVO4&callback=myMapPin"></script>

